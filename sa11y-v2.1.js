/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/ErrorBannerGenerator.js":
/*!************************************************!*\
  !*** ./src/components/ErrorBannerGenerator.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ErrorBannerGenerator)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./src/constants.js\");\n/* harmony import */ var _sa11y_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sa11y.config */ \"./src/sa11y.config.js\");\n\r\n\r\n\r\nfunction ErrorBannerGenerator(content) {\r\n    return `<div class=\"sa11y-error-message-container\">\r\n        <div class=\"sa11y-error-message\" lang=\"${_sa11y_config__WEBPACK_IMPORTED_MODULE_1__.default.lang.code}\">\r\n            <span class=\"sa11y-visually-hidden\">${_sa11y_config__WEBPACK_IMPORTED_MODULE_1__.default.lang.text[_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR]}</span> \r\n            ${content}\r\n        </div>\r\n    </div>`;\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/components/ErrorBannerGenerator.js?");

/***/ }),

/***/ "./src/components/IssueGenerator.js":
/*!******************************************!*\
  !*** ./src/components/IssueGenerator.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IssueGenerator)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./src/constants.js\");\n/* harmony import */ var _sa11y_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sa11y.config */ \"./src/sa11y.config.js\");\n\r\n\r\nfunction IssueGenerator(type, content, inline = false) {\r\n    const ValidTypes = new Set([_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR, _constants__WEBPACK_IMPORTED_MODULE_0__.WARNING, _constants__WEBPACK_IMPORTED_MODULE_0__.PASS]);\r\n    const CSSName = {\r\n        [_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR]: \"error\",\r\n        [_constants__WEBPACK_IMPORTED_MODULE_0__.WARNING]: \"warning\",\r\n        [_constants__WEBPACK_IMPORTED_MODULE_0__.PASS]: \"pass\",\r\n    };\r\n    // TODO: Discuss Throwing Errors.\r\n    if (!ValidTypes.has(type)) {\r\n        alert(`Invalid type: ${type}`);\r\n        throw Error;\r\n    }\r\n    const textType = _sa11y_config__WEBPACK_IMPORTED_MODULE_1__.default.lang.text[type];\r\n    return `\r\n        <div class=${inline ? \"sa11y-instance-inline\" : \"sa11y-instance\"}>\r\n            <button   \r\n                aria-label=${textType} \r\n                class=\"sa11y-btn \r\n                sa11y-${CSSName[type]}-btn${inline ? \"-text\" : \"\"}\" \r\n                data-tippy-content=\r\n                    \"<div lang='${_sa11y_config__WEBPACK_IMPORTED_MODULE_1__.default.lang.code}'>\r\n                        <div class='sa11y-header-text'>${textType}</div>\r\n                        ${content} \r\n                    </div>\"\r\n            > \r\n            </button>\r\n        </div>\r\n        `;\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/components/IssueGenerator.js?");

/***/ }),

/***/ "./src/constants.js":
/*!**************************!*\
  !*** ./src/constants.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ERROR\": () => (/* binding */ ERROR),\n/* harmony export */   \"WARNING\": () => (/* binding */ WARNING),\n/* harmony export */   \"PASS\": () => (/* binding */ PASS),\n/* harmony export */   \"TOOLICON\": () => (/* binding */ TOOLICON)\n/* harmony export */ });\n// Use these coonstants to distinguish errors in code.\r\nconst ERROR = \"error\";\r\nconst WARNING = \"warning\";\r\nconst PASS = \"pass\";\r\n\r\nconst TOOLICON =\r\n    \"<svg role='img' focusable='false' width='35px' height='35px' aria-hidden='true' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'><path fill='#ffffff' d='M256 48c114.953 0 208 93.029 208 208 0 114.953-93.029 208-208 208-114.953 0-208-93.029-208-208 0-114.953 93.029-208 208-208m0-40C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 56C149.961 64 64 149.961 64 256s85.961 192 192 192 192-85.961 192-192S362.039 64 256 64zm0 44c19.882 0 36 16.118 36 36s-16.118 36-36 36-36-16.118-36-36 16.118-36 36-36zm117.741 98.023c-28.712 6.779-55.511 12.748-82.14 15.807.851 101.023 12.306 123.052 25.037 155.621 3.617 9.26-.957 19.698-10.217 23.315-9.261 3.617-19.699-.957-23.316-10.217-8.705-22.308-17.086-40.636-22.261-78.549h-9.686c-5.167 37.851-13.534 56.208-22.262 78.549-3.615 9.255-14.05 13.836-23.315 10.217-9.26-3.617-13.834-14.056-10.217-23.315 12.713-32.541 24.185-54.541 25.037-155.621-26.629-3.058-53.428-9.027-82.141-15.807-8.6-2.031-13.926-10.648-11.895-19.249s10.647-13.926 19.249-11.895c96.686 22.829 124.283 22.783 220.775 0 8.599-2.03 17.218 3.294 19.249 11.895 2.029 8.601-3.297 17.219-11.897 19.249z'/></svg>\";\r\n\n\n//# sourceURL=webpack://sa11y/./src/constants.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _setup_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setup/index */ \"./src/setup/index.js\");\n\r\n(0,_setup_index__WEBPACK_IMPORTED_MODULE_0__.default)();\r\n//To-do: Figure out what to do with this guy.\r\n// loadGlobals();\r\n\n\n//# sourceURL=webpack://sa11y/./src/index.js?");

/***/ }),

/***/ "./src/js/DisplayPanel.js":
/*!********************************!*\
  !*** ./src/js/DisplayPanel.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ displayPanels)\n/* harmony export */ });\nfunction displayPanels(issueCount) {\r\n    let errorCount = issueCount[\"error\"];\r\n    let warningCount = issueCount[\"warning\"];\r\n    let totalCount = errorCount + warningCount;\r\n    $(\"#sa11y-panel\").addClass(\"sa11y-active\");\r\n    if (totalCount > 0) {\r\n        if (errorCount > 0) {\r\n            $(\"#sa11y-status\").text(\r\n                totalCount === 1\r\n                    ? \"One accessibility issue detected.\"\r\n                    : totalCount + \" accessibility issues detected.\"\r\n            );\r\n            $(\"#sa11y-panel-content\").addClass(\"sa11y-errors\");\r\n        } else if (warningCount > 0) {\r\n            $(\"#sa11y-status\").text(\r\n                totalCount === 1\r\n                    ? \"Please review warning.\"\r\n                    : \"Please review \" + totalCount + \" warnings.\"\r\n            );\r\n            $(\"#sa11y-panel-content\").addClass(\"sa11y-warnings\");\r\n        }\r\n    } else {\r\n        $(\"#sa11y-panel-content\").addClass(\"sa11y-pass\");\r\n        $(\"#sa11y-status\").text(\"No accessibility errors found.\");\r\n    }\r\n\r\n    //Show outline panel\r\n    $(\"#sa11y-outline-toggle\").click(function () {\r\n        $(this).toggleClass(\"sa11y-outline-active\");\r\n        $(\"#sa11y-outline-panel\").toggleClass(\"sa11y-active\");\r\n        $(this).text(function (i, v) {\r\n            return v === \"Show Outline\" ? \"Hide Outline\" : \"Show Outline\";\r\n        });\r\n        $(this).attr(\"aria-expanded\", function (i, attr) {\r\n            return attr == \"true\" ? \"false\" : \"true\";\r\n        });\r\n        $(\"#sa11y-outline-header > span\").focus();\r\n        $(\".sa11y-heading-label\").toggleClass(\"sa11y-label-visible\");\r\n\r\n        //Remove settings panel\r\n        $(\"#sa11y-settings-panel\").removeClass(\"sa11y-active\");\r\n        $settingsToggle.removeClass(\"sa11y-settings-active\");\r\n        $settingsToggle.attr(\"aria-expanded\", \"false\");\r\n        $settingsToggle.text(\"Show Settings\");\r\n\r\n        //Keyboard accessibility fix for scrollable panel content.\r\n        if ($(\"#sa11y-outline-list\").height() > 350) {\r\n            $(\"#sa11y-outline-list\").attr(\"tabindex\", \"0\");\r\n        }\r\n    });\r\n\r\n    //Show settings panel\r\n    $(\"#sa11y-settings-toggle\").click(function () {\r\n        $(this).toggleClass(\"sa11y-settings-active\");\r\n        $(\"#sa11y-settings-panel\").toggleClass(\"sa11y-active\");\r\n        $(this).text(function (i, v) {\r\n            return v === \"Show Settings\" ? \"Hide Settings\" : \"Show Settings\";\r\n        });\r\n        $(this).attr(\"aria-expanded\", function (i, attr) {\r\n            return attr == \"true\" ? \"false\" : \"true\";\r\n        });\r\n        $(\"#sa11y-settings-header > span\").focus();\r\n\r\n        //Remove outline panel\r\n        $(\"#sa11y-outline-panel\").removeClass(\"sa11y-active\");\r\n        $outlineToggle.removeClass(\"sa11y-outline-active\");\r\n        $outlineToggle.attr(\"aria-expanded\", \"false\");\r\n        $outlineToggle.text(\"Show Outline\");\r\n        $(\".sa11y-heading-label\").removeClass(\"sa11y-label-visible\");\r\n\r\n        //Keyboard accessibility fix for scrollable panel content.\r\n        if ($(\"#sa11y-settings-content\").height() > 350) {\r\n            $(\"#sa11y-settings-content\").attr(\"tabindex\", \"0\");\r\n        }\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/js/DisplayPanel.js?");

/***/ }),

/***/ "./src/js/LoadGlobals.js":
/*!*******************************!*\
  !*** ./src/js/LoadGlobals.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ loadGlobals)\n/* harmony export */ });\n/* harmony import */ var _sa11y_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sa11y.config */ \"./src/sa11y.config.js\");\n\r\n\r\n// Returns an  object containing a summary of elements to ignore\r\nfunction loadGlobals() {\r\n    // Set the root container aka the container sa11y is scanning\r\n    let { root, ignore: ignoreConfig } = _sa11y_config__WEBPACK_IMPORTED_MODULE_0__.default;\r\n    let elementsToIgnore = {};\r\n    if (\r\n        typeof root !== \"string\"\r\n        //  || $(root).length === 0\r\n    ) {\r\n        root = \"body\";\r\n    }\r\n    /*\r\n        elementsToIgnore[item] are the ignore classes that sa11y generates\r\n        ignoreConfig[item] are the ignore classes found in the config file  \r\n    */\r\n\r\n    elementsToIgnore[\"container\"] = \"[aria-hidden]\";\r\n    if (ignoreConfig[\"container\"].length !== \"\") {\r\n        elementsToIgnore[\"container\"] +=\r\n            \",\" +\r\n            ignoreConfig[\"container\"]\r\n                .split(\",\")\r\n                .map((x) => x.trim() + \" *,\" + x.trim())\r\n                .join();\r\n    }\r\n\r\n    // Images ignore defaults plus presentation role.\r\n    elementsToIgnore[\"image\"] = \"[role='presentation']\";\r\n    if (ignoreConfig[\"image\"] !== \"\") {\r\n        elementsToIgnore[\"container\"] = \"[role='presentation'],\" + ignoreImages;\r\n    }\r\n\r\n    elementsToIgnore[\"header\"] = ignoreConfig[\"header\"];\r\n\r\n    // Links ignore defaults plus sa11y links.\r\n    elementsToIgnore[\"link\"] = \"[aria-hidden]\";\r\n    if (ignoreConfig[\"link\"] !== \"\") {\r\n        elementsToIgnore[\"link\"] = ignoreConfig[\"link\"] + \",[aria-hidden]\";\r\n    }\r\n\r\n    elementsToIgnore[\"header\"] = elementsToIgnore[\"container\"];\r\n    if (ignoreConfig[\"header\"] !== \"\") {\r\n        elementsToIgnore[\"header\"] =\r\n            ignoreConfig[\"header\"] + \",\" + elementsToIgnore[\"container\"];\r\n    }\r\n\r\n    /*\r\n        // Default setup generates the following: \r\n        {\r\n            container: '[aria-hidden],.sa11y-ignore *,.sa11y-ignore,#sa11y-container *,#sa11y-container',\r\n            image: \"[role='presentation']\",\r\n            header: '.sa11y-ignore, #sa11y-container',\r\n            link: '[aria-hidden]'\r\n        }\r\n    */\r\n\r\n    return elementsToIgnore;\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/js/LoadGlobals.js?");

/***/ }),

/***/ "./src/js/Reset.js":
/*!*************************!*\
  !*** ./src/js/Reset.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ reset)\n/* harmony export */ });\n/* harmony import */ var _sa11y_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sa11y.config */ \"./src/sa11y.config.js\");\n\r\n\r\nfunction reset() {\r\n    const root = $(_sa11y_config__WEBPACK_IMPORTED_MODULE_0__.default.root);\r\n    root.find(\".sa11y-error-border\").removeClass(\"sa11y-error-border\");\r\n    root.find(\".sa11y-error-heading\").removeClass(\"sa11y-error-heading\");\r\n    root.find(\".sa11y-error-message-container\").remove();\r\n    root.find(\".sa11y-error-text\").removeClass(\"sa11y-error-text\");\r\n\r\n    root.find(\".sa11y-warning-border\").removeClass(\"sa11y-warning-border\");\r\n    root.find(\".sa11y-warning-text\").removeClass(\"sa11y-warning-text\");\r\n    root.find(\".sa11y-warning-uppercase\").contents().unwrap();\r\n    root.find(\"p\").removeClass(\"sa11y-fake-list\");\r\n\r\n    root.find(\".sa11y-instance\").remove();\r\n    root.find(\".sa11y-instance-inline\").remove();\r\n    root.find(\".sa11y-heading-label\").remove();\r\n    root.find(\"#sa11y-panel\").removeClass(\"sa11y-active\");\r\n    root.find(\"#sa11y-outline-list li\").remove();\r\n    root.find(\"#sa11y-readability-content\").remove();\r\n    root.find(\".sa11y-readability-period\").remove();\r\n\r\n    $(\"#sa11y-panel-content\").removeClass();\r\n    $(\"#sa11y-status\").text();\r\n    // Remove Listeners for outline/settings clicks\r\n    $(\"#sa11y-outline-toggle\").off(\"click\");\r\n    $(\"#sa11y-settings-toggle\").off(\"click\");\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/js/Reset.js?");

/***/ }),

/***/ "./src/js/ScanPage.js":
/*!****************************!*\
  !*** ./src/js/ScanPage.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ scanPage)\n/* harmony export */ });\n/* harmony import */ var _sa11y_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sa11y.config */ \"./src/sa11y.config.js\");\n/* harmony import */ var _findElements__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./findElements */ \"./src/js/findElements.js\");\n/* harmony import */ var _DisplayPanel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DisplayPanel */ \"./src/js/DisplayPanel.js\");\n/* harmony import */ var _Reset__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Reset */ \"./src/js/Reset.js\");\n/* harmony import */ var _rulesets_Headers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../rulesets/Headers */ \"./src/rulesets/Headers.js\");\n/* harmony import */ var _rulesets_LinkText__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../rulesets/LinkText */ \"./src/rulesets/LinkText.js\");\n/* harmony import */ var _rulesets_Labels__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../rulesets/Labels */ \"./src/rulesets/Labels.js\");\n/* harmony import */ var _rulesets_AltText__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../rulesets/AltText */ \"./src/rulesets/AltText.js\");\n/* harmony import */ var _rulesets_QA__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../rulesets/QA */ \"./src/rulesets/QA.js\");\n/* harmony import */ var _rulesets_Contrast__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../rulesets/Contrast */ \"./src/rulesets/Contrast.js\");\n/* harmony import */ var _rulesets_Readability__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../rulesets/Readability */ \"./src/rulesets/Readability.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Previously named checkall\r\nasync function scanPage(elemToIgnore) {\r\n    let issueCount = { error: 0, warning: 0 };\r\n    const root = $(_sa11y_config__WEBPACK_IMPORTED_MODULE_0__.default.root);\r\n    const elems = (0,_findElements__WEBPACK_IMPORTED_MODULE_1__.default)(root, elemToIgnore);\r\n\r\n    let addToIssueCount = (result = {}) => {\r\n        issueCount[\"error\"] += result[\"error\"] || 0;\r\n        issueCount[\"warning\"] += result[\"warning\"] || 0;\r\n    };\r\n    (0,_Reset__WEBPACK_IMPORTED_MODULE_3__.default)(root);\r\n    // Headers\r\n    addToIssueCount((0,_rulesets_Headers__WEBPACK_IMPORTED_MODULE_4__.default)(elems, elemToIgnore));\r\n    // Link Text\r\n    addToIssueCount((0,_rulesets_LinkText__WEBPACK_IMPORTED_MODULE_5__.default)(elems));\r\n    // Labels\r\n    addToIssueCount((0,_rulesets_Labels__WEBPACK_IMPORTED_MODULE_6__.default)(elems));\r\n    // Alt Text\r\n    addToIssueCount((0,_rulesets_AltText__WEBPACK_IMPORTED_MODULE_7__.default)(elems));\r\n    // QA\r\n    addToIssueCount((0,_rulesets_QA__WEBPACK_IMPORTED_MODULE_8__.default)(root, elemToIgnore));\r\n\r\n    // Contrast\r\n    if (localStorage.getItem(\"sa11y-contrastCheck\") === \"On\") {\r\n        addToIssueCount((0,_rulesets_Contrast__WEBPACK_IMPORTED_MODULE_9__.default)(root, elemToIgnore));\r\n    }\r\n    //  Readability\r\n    if (localStorage.getItem(\"sa11y-readabilityCheck\") === \"On\") {\r\n        addToIssueCount((0,_rulesets_Readability__WEBPACK_IMPORTED_MODULE_10__.default)(root, elemToIgnore));\r\n    }\r\n\r\n    // ?: Original Code:\r\n    //  I dont understand what this does...\r\n\r\n    /*\r\n    if (this.panelActive) {\r\n            this.reset();\r\n        } else {\r\n            this.displayPanel();\r\n        }\r\n        */\r\n\r\n    // // Force close\r\n    // if (localStorage.getItem(\"sa11y-panel\") === \"opened\") {\r\n    //     localStorage.setItem(\"sa11y-panel\", \"closed\");\r\n    //     sa11yToggle.removeClass(\"sa11y-on\").attr(\"aria-expanded\", \"false\");\r\n    // }\r\n    // // Open Again\r\n    // localStorage.setItem(\"sa11y-panel\", \"opened\");\r\n    // sa11yToggle.addClass(\"sa11y-on\").attr(\"aria-expanded\", \"true\");\r\n    (0,_DisplayPanel__WEBPACK_IMPORTED_MODULE_2__.default)(issueCount);\r\n\r\n    // Update Badge\r\n    // let totalCount = this.errorCount + this.warningCount;\r\n    // if (totalCount === 0) {\r\n    //     $(\"#sa11y-notification-badge\").hide();\r\n    // } else if (this.warningCount > 0 && this.errorCount === 0) {\r\n    //     $(\"#sa11y-notification-badge\").show();\r\n    //     $(\"#sa11y-notification-badge\").addClass(\r\n    //         \"sa11y-notification-badge-warning\"\r\n    //     );\r\n    //     $(\"#sa11y-notification-count\").html(this.warningCount);\r\n    // } else {\r\n    //     $(\"#sa11y-notification-badge\").show();\r\n    //     $(\"#sa11y-notification-count\").html(totalCount);\r\n    // }t\r\n\r\n    // Initizlize tippy\r\n    tippy(\".sa11y-btn\", {\r\n        interactive: true,\r\n        trigger: \"mouseenter click\",\r\n        arrow: true,\r\n        theme: \"sa11y-theme\",\r\n        allowHTML: true,\r\n        appendTo: document.body,\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/js/ScanPage.js?");

/***/ }),

/***/ "./src/js/findElements.js":
/*!********************************!*\
  !*** ./src/js/findElements.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(root, elemToIgnore) {\r\n    let containerIgnore = elemToIgnore[\"container\"];\r\n    let imageIgnore = elemToIgnore[\"image\"];\r\n    let linkIgnore = elemToIgnore[\"link\"];\r\n    return {\r\n        inputs: root.find(\"input\").not(containerIgnore).not(\"input:hidden\"),\r\n        link: root.find(\"a[href]\").not(linkIgnore),\r\n        p: root.find(\"p\").not(containerIgnore),\r\n        h: root\r\n            .find(\"h1, h2, h3, h4, h5, h6, [role='heading'][aria-level]\")\r\n            .not(\":hidden\")\r\n            .not(containerIgnore),\r\n        mainPandLi: root\r\n            .find(\"main p, main li, [role='main'] p, [role='main'] li\")\r\n            .not(containerIgnore),\r\n        images: root.find(\"img\").not(imageIgnore),\r\n        iframe: root.find(\"iframe\").not(containerIgnore),\r\n\r\n        contrast: root\r\n            .find(\"*:visible\")\r\n            .not(\".sa11y-exclude *\")\r\n            .not(\"#sa11y-container *\")\r\n            .not(containerIgnore),\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/js/findElements.js?");

/***/ }),

/***/ "./src/rulesets/AltText.js":
/*!*********************************!*\
  !*** ./src/rulesets/AltText.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ checkAltText)\n/* harmony export */ });\n/* harmony import */ var _components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/IssueGenerator */ \"./src/components/IssueGenerator.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./src/constants.js\");\n\r\n\r\n\r\nfunction checkAltText({ images }) {\r\n    let containsAltTextStopWords = (textContent) => {\r\n        let stopWords = [\r\n            \".png\",\r\n            \"DSC\",\r\n            \".jpg\",\r\n            \".jpeg\",\r\n            \"image of\",\r\n            \"graphic of\",\r\n            \"picture of\",\r\n            \"placeholder\",\r\n        ];\r\n        var hit = null;\r\n        $.each(stopWords, function (index, word) {\r\n            if (textContent.toLowerCase().indexOf(word) >= 0) {\r\n                hit = word;\r\n                return word;\r\n            }\r\n        });\r\n        return hit;\r\n    };\r\n    let sanitizeForHTML = (string) => {\r\n        let entityMap = {\r\n            \"&\": \"&amp;\",\r\n            \"<\": \"&lt;\",\r\n            \">\": \"&gt;\",\r\n            '\"': \"&quot;\",\r\n            \"'\": \"&#39;\",\r\n            \"/\": \"&#x2F;\",\r\n            \"`\": \"&#x60;\",\r\n            \"=\": \"&#x3D;\",\r\n        };\r\n        return String(string).replace(/[&<>\"'`=\\/]/g, function (s) {\r\n            return entityMap[s];\r\n        });\r\n    };\r\n\r\n    let errorCount = 0;\r\n    let warningCount = 0;\r\n\r\n    // Test each image for alternative text.\r\n    images.each((i, el) => {\r\n        let $el = $(el);\r\n        let text = $el.attr(\"alt\");\r\n\r\n        if (text === undefined) {\r\n            errorCount += 1;\r\n            // Image fails if it is used as a link and is missing an alt attribute.\r\n            if ($el.parents().is(\"a[href]\")) {\r\n                //Image contains both hyperlink\r\n                if ($el.parents(\"a\").text().trim().length > 1) {\r\n                    $el.addClass(\"sa11y-error-border\");\r\n                    let issueText =\r\n                        \"Image is being used as a hyperlink with surrounding text, although the alt attribute should be marked as decorative or null.\";\r\n                    $el.closest(\"a\").before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText));\r\n                } else if ($el.parents(\"a\").text().trim().length == 0) {\r\n                    // Missing alt link text\r\n                    $el.addClass(\"sa11y-error-border\");\r\n                    let issueText =\r\n                        \"Image is being used as a hyperlink but is missing alt text! Please ensure alt text describes where the link takes you.\";\r\n                    $el.closest(\"a\").before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText));\r\n                }\r\n            }\r\n            // General failure message if image is missing alt.\r\n            else {\r\n                $el.addClass(\"sa11y-error-border\");\r\n                let issueText =\r\n                    \"Missing alt text! If the image conveys a story, a mood or important information - be sure to describe the image.\";\r\n                $el.before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText));\r\n            }\r\n        }\r\n        // If alt attribute is present, further tests are done.\r\n        else {\r\n            let altText = sanitizeForHTML(text); //Prevent tooltip from breaking.\r\n            let error = containsAltTextStopWords(altText);\r\n            let altLength = text.length;\r\n\r\n            // Image fails if a stop word was found.\r\n            if (error != null && $el.parents().is(\"a[href]\")) {\r\n                errorCount += 1;\r\n                $el.addClass(\"sa11y-error-border\");\r\n                let issueText = `Detected poor alt text in hyperlinked image. Ensure alt text describes destination of link, not a literal description of the picture. \r\n                    Remove word: <span class='sa11y-red-text sa11y-bold'>${error}</span>. \r\n                    <hr aria-hidden='true' class='sa11y-hr'> \r\n                    The alt text for this image is: <span class='sa11y-bold'>${altText}</span>`;\r\n                $el.closest(\"a\").before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText));\r\n            } else if (error != null) {\r\n                // Alt text has bad word\r\n                errorCount += 1;\r\n                $el.addClass(\"sa11y-error-border\");\r\n                let issueText = `Poor alt text found. It is not necessary to include words like <em>image</em>, <em>graphic</em> or the file extension. \r\n                    Consider removing the word: <span class='sa11y-red-text sa11y-bold'>${error}</span>. \r\n                    <hr aria-hidden='true' class='sa11y-hr'> \r\n                    The alt text for this image is: <span class='sa11y-bold'>${altText} </span>`;\r\n                $el.before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText));\r\n            } else if (text == \"\" && $el.parents().is(\"a[href]\")) {\r\n                if ($el.parents(\"a\").text().trim().length == 0) {\r\n                    // ImageLinkNullAltNoTextMessage\r\n                    errorCount += 1;\r\n                    $el.addClass(\"sa11y-error-border\");\r\n                    let issueText =\r\n                        \"Image within hyperlink is marked as decorative and there is no link text. Please add alt text to image that describes destination of link.\";\r\n                    $el.closest(\"a\").before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText));\r\n                } else {\r\n                    let issueText =\r\n                        \"Image is marked as decorative, although the hyperlink is using the surrounding text as a descriptive label.\";\r\n                    $el.closest(\"a\").before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.PASS, issueText));\r\n                }\r\n            }\r\n            //Decorative alt and not a link.\r\n            else if (text == \"\" && $el.parents().not(\"a[href]\")) {\r\n                let issueText =\r\n                    \"Image marked as <span class='sa11y-bold'>decorative.</span> However, if the image conveys a story, a mood or important information - be sure to add alt text.\";\r\n                $el.before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.PASS, issueText));\r\n            }\r\n            //Link and contains alt text.\r\n            else if (text.length > 160 && $el.parents().is(\"a\")) {\r\n                // HyperlinkAltLengthMessage\r\n                errorCount += 1;\r\n                $el.addClass(\"sa11y-error-border\");\r\n                let issueText = `Alt text description on hyperlinked image is <span class='sa11y-bold'>too long</span>. \r\n                    The alt text on hyperlinked images should describe where the link takes you, not a literal description of the image. \r\n                    <span class='sa11y-bold'>Consider using the title of the page it links to as the alt text.</span> \r\n                    <hr aria-hidden='true' class='sa11y-hr'> \r\n                    The alt text is <span class='sa11y-red-text sa11y-bold'>${altLength}</span> characters: \r\n                    <span class='sa11y-red-text sa11y-bold'>${altText}</span>`;\r\n                $el.closest(\"a\").before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText));\r\n            }\r\n            //Link and contains an alt text.\r\n            else if (\r\n                text != \"\" &&\r\n                $el.parents().is(\"a\") &&\r\n                $el.parents(\"a\").text().trim().length == 0\r\n            ) {\r\n                // ImageLinkAltTextMessage\r\n                warningCount += 1;\r\n                $el.addClass(\"sa11y-warning-border\");\r\n                let issueText = `Image link contains alt text, although please ensure alt text describes the destination page. \r\n                    <span class='sa11y-bold'>Consider using the title of the page it links to as the alt text.</span>\r\n                    Does the alt text describe where the link takes you? \r\n                    <hr aria-hidden='true' class='sa11y-hr'>\r\n                    Alt text: <span class='sa11y-bold'>${altText}</span>`;\r\n                $el.closest(\"a\").before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.WARNING, issueText));\r\n            }\r\n            //Contains alt text & surrounding link text.\r\n            else if (\r\n                text != \"\" &&\r\n                $el.parents().is(\"a\") &&\r\n                $el.parents(\"a\").text().trim().length > 1\r\n            ) {\r\n                warningCount += 1;\r\n                $el.addClass(\"sa11y-warning-border\");\r\n                let issueText = `Image link contains <span class='sa11y-bold'>both alt text and surrounding link text.</span> If this image is decorative and is being used as a functional link to another page, consider marking the image as decorative or null - the surrounding link text should suffice. <hr aria-hidden='true' class='sa11y-hr'>\r\n                    Alt text: <span class='sa11y-bold'>${altText}</span>`;\r\n                $el.closest(\"a\").before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.WARNING, issueText));\r\n            } else if (text.length > 160) {\r\n                // AltTooLongMessage\r\n                warningCount += 1;\r\n                $el.addClass(\"sa11y-warning-border\");\r\n                let issueText = `Alt text description is <span class='sa11y-bold'>too long</span>. Alt text should be concise, yet meaningful like a <em>tweet</em> (around 100 characters). \r\n                If this is a complex image or a graph, consider putting the long description of the image in text below or in an accordion component. \r\n                <hr aria-hidden='true' class='sa11y-hr'> \r\n                The alt text is <span class='sa11y-red-text sa11y-bold'> ${altLength}</span> characters: \r\n                <span class='sa11y-red-text sa11y-bold'>${altText}</span>`;\r\n                $el.before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.WARNING, issueText));\r\n            } else if (text != \"\") {\r\n                let issueText = `The alt text for this image is: <span class='sa11y-bold'>${altText}</span>`;\r\n                $el.before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.PASS, issueText));\r\n            }\r\n        }\r\n    });\r\n    return { error: errorCount, warning: warningCount };\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/rulesets/AltText.js?");

/***/ }),

/***/ "./src/rulesets/Contrast.js":
/*!**********************************!*\
  !*** ./src/rulesets/Contrast.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ checkContrast)\n/* harmony export */ });\n/* harmony import */ var _components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/IssueGenerator */ \"./src/components/IssueGenerator.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./src/constants.js\");\n\r\n\r\n\r\nfunction checkContrast(root, elemtoIgnore) {\r\n    let errorCount = 0;\r\n    let warningCount = 0;\r\n    var contrastIssues = {\r\n        errors: [],\r\n        warnings: [],\r\n    };\r\n    var contrast = {\r\n        // Parse rgb(r, g, b) and rgba(r, g, b, a) strings into an array.\r\n        // Adapted from https://github.com/gka/chroma.js\r\n        parseRgb: (css) => {\r\n            var i, m, rgb, _i, _j;\r\n            if (\r\n                (m = css.match(\r\n                    /rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/\r\n                ))\r\n            ) {\r\n                rgb = m.slice(1, 4);\r\n                for (i = _i = 0; _i <= 2; i = ++_i) {\r\n                    rgb[i] = +rgb[i];\r\n                }\r\n                rgb[3] = 1;\r\n            } else if (\r\n                (m = css.match(\r\n                    /rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/\r\n                ))\r\n            ) {\r\n                rgb = m.slice(1, 5);\r\n                for (i = _j = 0; _j <= 3; i = ++_j) {\r\n                    rgb[i] = +rgb[i];\r\n                }\r\n            }\r\n            return rgb;\r\n        },\r\n        // Based on http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n        relativeLuminance: function (c) {\r\n            var lum = [];\r\n            for (var i = 0; i < 3; i++) {\r\n                var v = c[i] / 255;\r\n                lum.push(\r\n                    v < 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4)\r\n                );\r\n            }\r\n            return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n        },\r\n        // Based on http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n        contrastRatio: function (x, y) {\r\n            var l1 = contrast.relativeLuminance(contrast.parseRgb(x));\r\n            var l2 = contrast.relativeLuminance(contrast.parseRgb(y));\r\n            return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\r\n        },\r\n        // Based on http://jsfiddle.net/Y4uDL/\r\n        getBackground: function (el) {\r\n            var bgColor = el.css(\"background-color\");\r\n            var bgImage = el.css(\"background-image\");\r\n\r\n            if (\r\n                bgColor !== \"rgba(0, 0, 0, 0)\" &&\r\n                bgColor !== \"transparent\" &&\r\n                bgImage === \"none\"\r\n            ) {\r\n                return bgColor;\r\n            } else if (bgImage !== \"none\") {\r\n                return \"image\";\r\n            }\r\n\r\n            if (el.is(\"html\")) {\r\n                return \"rgb(255, 255, 255)\";\r\n            } else {\r\n                return contrast.getBackground(el.parent());\r\n            }\r\n        },\r\n        check: (contrastElements) => {\r\n            contrastElements.each(function () {\r\n                var $this = $(this);\r\n                var color = $this.css(\"color\");\r\n                var background = contrast.getBackground($this);\r\n                var htmlTag = $this[0].tagName;\r\n                var textCheck = $this.clone().children().remove().end().text();\r\n                var ratingString;\r\n                var fontSizeString;\r\n                var failed;\r\n\r\n                if (htmlTag === \"SVG\") {\r\n                    var fill = $this.css(\"fill\");\r\n                    var ratio =\r\n                        Math.round(\r\n                            contrast.contrastRatio(fill, background) * 100\r\n                        ) / 100;\r\n                    var ratioText = ratio + \":1\";\r\n                    if (ratio < 3) {\r\n                        failed = true;\r\n                        fontSizeString = \"svg fill\";\r\n                        ratingString = \"fail\";\r\n                    }\r\n                } else if (\r\n                    $.trim(textCheck).length ||\r\n                    htmlTag === \"INPUT\" ||\r\n                    htmlTag === \"SELECT\" ||\r\n                    htmlTag === \"TEXTAREA\"\r\n                ) {\r\n                    // Background image needs to be manually reviewed\r\n                    if (background === \"image\") {\r\n                        var ratioText = \"unknown\";\r\n                        ratingString = \"Needs manual review\";\r\n                        fontSizeString = \"N/A\";\r\n                        failed = true;\r\n                    } else {\r\n                        var ratio =\r\n                                Math.round(\r\n                                    contrast.contrastRatio(color, background) *\r\n                                        100\r\n                                ) / 100,\r\n                            ratioText = ratio + \":1\",\r\n                            fontSize = parseInt($this.css(\"fontSize\")),\r\n                            fontWeight = $this.css(\"fontWeight\");\r\n\r\n                        /* Unscientific condition of ignoring visually hidden screen reader text. If width and height of element is less than 1px and overflow is set to hidden, do not run contrast check on it...*/\r\n                        if (\r\n                            ($this.width() <= 1 || $this.height() <= 1) &&\r\n                            $this.css(\"overflow\") == \"hidden\"\r\n                        ) {\r\n                        } else if (\r\n                            fontSize >= 18 ||\r\n                            (fontSize >= 14 && fontWeight >= 700)\r\n                        ) {\r\n                            fontSizeString = \"Large scale text\";\r\n                            if (ratio < 3) {\r\n                                ratingString = \"fail\";\r\n                                failed = true;\r\n                            } else {\r\n                                ratingString = \"pass\";\r\n                                failed = false;\r\n                            }\r\n                        } else {\r\n                            fontSizeString = \"Normal scale body text\";\r\n                            if (ratio < 4.5) {\r\n                                ratingString = \"fail\";\r\n                                failed = true;\r\n                            } else {\r\n                                ratingString = \"pass\";\r\n                                failed = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // highlight the element in the DOM and log the element, contrast ratio and failure for testing in console\r\n                if (failed) {\r\n                    var error = {};\r\n                    error = {\r\n                        name: $this,\r\n                        ratio: ratioText,\r\n                        detail: fontSizeString,\r\n                        status: ratingString,\r\n                    };\r\n                    if (ratingString === \"fail\") {\r\n                        contrastIssues.errors.push(error);\r\n                    } else if (ratingString === \"Needs manual review\") {\r\n                        contrastIssues.warnings.push(error);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return contrastIssues;\r\n        },\r\n    };\r\n    console.log(elemtoIgnore[\"container\"]);\r\n    contrastIssues = contrast.check(\r\n        root\r\n            .find(\"*:visible\")\r\n            .not(\".sa11y-exclude *\")\r\n            .not(\"#sa11y-container *\")\r\n            .not(elemtoIgnore[\"container\"])\r\n    );\r\n    console.log(contrastIssues);\r\n    contrastIssues[\"errors\"].forEach((item) => {\r\n        var name = item.name;\r\n        var cdetail = item.detail;\r\n        var cratio = item.ratio;\r\n        var nodename = name[0].nodeName;\r\n        var nodetext = name[0].textContent;\r\n        errorCount += 1;\r\n        let issueText = `${cdetail} does not have enough contrast with the background. \r\n        The contrast ratio should be at least 4.5:1 for normal text and 3:1 for large text. <hr class='sa11y-hr' aria-hidden='true'> \r\n        The contrast ratio is <span class='sa11y-red-text sa11y-bold'> ${cratio}</span> for the following text: \r\n        <span class='sa11y-bold sa11y-red-text'>${nodetext} </span>`;\r\n        $(name).before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText, true));\r\n    });\r\n\r\n    contrastIssues[\"warnings\"].forEach((item) => {\r\n        var name = item.name;\r\n        var nodetext = name[0].textContent;\r\n        warningCount += 1;\r\n        let issueText = `The contrast of this text is unknown and needs to be manually reviewed. Ensure the text and the background have strong contrasting colours. The contrast ratio should be at least 4.5:1 for normal text and 3:1 for large text. <hr class='sa11y-hr' aria-hidden='true'>Please review contrast of the following text:<br> <span class='sa11y-bold'>  ${nodetext} </span>`;\r\n        $(name)\r\n            .addClass(\"sa11y-warning-border\")\r\n            .before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.WARNING, issueText, true));\r\n    });\r\n    return { warning: warningCount, error: errorCount };\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/rulesets/Contrast.js?");

/***/ }),

/***/ "./src/rulesets/Headers.js":
/*!*********************************!*\
  !*** ./src/rulesets/Headers.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ checkHeaders)\n/* harmony export */ });\n/* harmony import */ var _components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/IssueGenerator */ \"./src/components/IssueGenerator.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./src/constants.js\");\n/* harmony import */ var _sa11y_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sa11y.config */ \"./src/sa11y.config.js\");\n// checkHeaders(headings,ignoreClasses)\r\n\r\n\r\n\r\n\r\nfunction checkHeaders({ h }, elemToIgnore) {\r\n    let prevLevel;\r\n    let errorCount = 0;\r\n    // For each heading on the page\r\n    h.each((i, el) => {\r\n        let $el = $(el);\r\n        let level;\r\n\r\n        // Get the level of the current heading\r\n        level = $el.attr(\"aria-level\") || $el[0].tagName.slice(1);\r\n\r\n        // Get heading length\r\n        let headingLength = $el.text().trim().length;\r\n\r\n        // Stores the error text\r\n        let issueText = null;\r\n\r\n        // If the heading is non consequtive based on it's heading level\r\n        if (level - prevLevel > 1 && i !== 0) {\r\n            issueText = `Non-consecutive heading level used. Headings should never skip levels, or go from \r\n                    <span class='sa11y-bold'>Heading ${prevLevel}</span> \r\n                    to \r\n                    <span class='sa11y-red-text sa11y-bold'>Heading ${level}</span>.`;\r\n        } else if ($el.text().trim().length === 0) {\r\n            // If the heading tag is empty\r\n            issueText = \"Empty heading found! Please remove empty header tags.\";\r\n            $el.addClass(\"sa11y-error-text\");\r\n        } else if ($el.text().trim().length > 170) {\r\n            // If the heading is too long\r\n            issueText = `Heading is too long! Headings are used to organize content and convey structure. They should be brief, clear, informative and unique. Please keep headings less than 160 characters (no more than a sentence).<hr aria-hidden='true' class='sa11y-hr'>Character count: \r\n                    <span class='sa11y-bold sa11y-red-text'>${headingLength}</span>.`;\r\n        } else if (i === 0 && level !== 1 && level !== 2) {\r\n            // If the first heading is H1 or H2\r\n            issueText = `First heading on page should usually be a Heading 1 or Heading 2. Heading 1 should be the start of the main content section, and is the main heading that describes the overall purpose of the page. Learn more about <a href='https://www.w3.org/WAI/tutorials/page-structure/headings/' target='_blank'>Heading Structure.<span class='sa11y-visually-hidden'> (Opens in new tab)</span></a>`;\r\n        }\r\n\r\n        prevLevel = level;\r\n\r\n        let li = `<li class='sa11y-outline-${level}'>\r\n                <span class='sa11y-badge'>${level}</span> \r\n                <span class='sa11y-outline-list-item'>${$el.text()}</span>\r\n            </li>`;\r\n\r\n        let liError = `<li class='sa11y-outline-${level}'>\r\n                <span class='sa11y-badge sa11y-error-badge'>\r\n                <span aria-hidden='true'>&#10007;</span>\r\n                    <span class='sa11y-visually-hidden'>${\r\n                        _sa11y_config__WEBPACK_IMPORTED_MODULE_2__.default.lang.text[_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR]\r\n                    }</span>\r\n                    ${level}\r\n                    </span> \r\n                <span class='sa11y-outline-list-item sa11y-red-text sa11y-bold'>${$el.text()}</span>\r\n            </li>`;\r\n\r\n        // Add the heading to the outline (wrt error/pass)\r\n        let outlineIgnore = elemToIgnore[\"outline\"] || \"\";\r\n        if ($el.not(outlineIgnore).length !== 0) {\r\n            $el.not(outlineIgnore).append(\r\n                `<span class='sa11y-heading-label'>H${level}</span>`\r\n            );\r\n            if (issueText != null && $el.closest(\"a\").length > 0) {\r\n                errorCount += 1;\r\n                $el.addClass(\"sa11y-error-heading\");\r\n                $el.closest(\"a\").after((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText, true));\r\n                $(\"#sa11y-outline-list\").append(liError);\r\n            } else if (issueText != null) {\r\n                errorCount += 1;\r\n                $el.addClass(\"sa11y-error-heading\");\r\n                $el.before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText, true));\r\n                $(\"#sa11y-outline-list\").append(liError);\r\n            } else if (issueText === null) {\r\n                $(\"#sa11y-outline-list\").append(li);\r\n            }\r\n        }\r\n    });\r\n    return { error: errorCount };\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/rulesets/Headers.js?");

/***/ }),

/***/ "./src/rulesets/Labels.js":
/*!********************************!*\
  !*** ./src/rulesets/Labels.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ checkLabels)\n/* harmony export */ });\n/* harmony import */ var _components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/IssueGenerator */ \"./src/components/IssueGenerator.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./src/constants.js\");\n/* harmony import */ var _sa11y_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sa11y.config */ \"./src/sa11y.config.js\");\n\r\n\r\n\r\n\r\nfunction checkLabels({ inputs }) {\r\n    let errorCount = 0;\r\n    inputs.each((i, el) => {\r\n        let $el = $(el);\r\n        if (\r\n            !$el.attr(\"id\") &&\r\n            !$el.attr(\"aria-label\") &&\r\n            !$el.attr(\"aria-labelledby\")\r\n        ) {\r\n            // Missing Label\r\n            errorCount += 1;\r\n            $el.addClass(\"sa11y-error-border\");\r\n            let issueText =\r\n                \"There is no label associated with this input. Please add an <span class='sa11y-kbd'>id</span> to this input, and add a matching <span class='sa11y-kbd'>for</span> attribute to the label.\";\r\n            $el.after((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText, true));\r\n        } else if ($el.attr(\"aria-label\")) {\r\n            /*Optional: add pass border.*/\r\n        } else if ($el.prev().is(\"label\")) {\r\n            let label = $el.prev();\r\n            if (label.attr(\"for\") == $el.attr(\"id\")) {\r\n                /*Optional: add pass border.*/\r\n            } else {\r\n                // No For Attribute\r\n                errorCount += 1;\r\n                $el.addClass(\"sa11y-error-border\");\r\n                let issueText = `There is no label associated with this input. \r\n                    Add a <span class='sa11y-kbd'>for</span> attribute to the label that matches the <span class='sa11y-kbd'>id</span> of this input. \r\n                    <hr class='sa11y-hr' aria-hidden='true'>\r\n                    The ID for this input is: \r\n                    <span class='sa11y-bold'>id=&#34;${$el.attr(\"id\")}&#34;\r\n                    </span>`;\r\n                $el.after((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText, true));\r\n            }\r\n        }\r\n        return { error: errorCount };\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/rulesets/Labels.js?");

/***/ }),

/***/ "./src/rulesets/LinkText.js":
/*!**********************************!*\
  !*** ./src/rulesets/LinkText.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ checkLinkText)\n/* harmony export */ });\n/* harmony import */ var _components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/IssueGenerator */ \"./src/components/IssueGenerator.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./src/constants.js\");\n/* harmony import */ var _sa11y_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sa11y.config */ \"./src/sa11y.config.js\");\n\r\n\r\n\r\n\r\nfunction checkLinkText({ link }) {\r\n    /* Mini function if you need to exclude any text contained with a span. We created this function to ignore automatically appended sr-only text for external links and document filetypes.\r\n\r\n$.fn.ignore = function(sel){\r\n  return this.clone().find(sel||\">*\").remove().end();\r\n};\r\n\r\n\r\nExample: If you need to ignore any text within <span class=\"sr-only\">test</span>.\r\n$el.ignore(\"span.sr-only\").text().trim(); */\r\n\r\n    // Checks if text is not descriptive and returns the word(s) that are making the text inaccessible.\r\n    //showStopper words will always flag an issue if contained in a hyperlink.\r\n    //partialStopWords will only be flagged as an issue if it's the only hyperlink text.\r\n    let containsLinkTextStopWords = function (textContent) {\r\n        let stopWords = [\r\n            \"click here\",\r\n            \"<\",\r\n            \">\",\r\n            \"http://\",\r\n            \"https://\",\r\n            \".aspx\",\r\n            \".html\",\r\n            \".php\",\r\n            \"here.\",\r\n        ];\r\n        let partialStopWords = [\r\n            \"learn more\",\r\n            \"learn\",\r\n            \"more\",\r\n            \"register\",\r\n            \"register now\",\r\n            \"this page\",\r\n            \"check out\",\r\n            \"learn to\",\r\n            \"view\",\r\n            \"view our\",\r\n            \"read more\",\r\n            \"read\",\r\n            \".\",\r\n            \",\",\r\n            \":\",\r\n            \"page\",\r\n            \"this page\",\r\n            \"download\",\r\n            \"form\",\r\n            \"link\",\r\n            \"here\",\r\n            \"this\",\r\n        ];\r\n        var hit = null;\r\n\r\n        // TODO: Check if this actually returns false.\r\n        // First check for show stoppers.\r\n        $.each(stopWords, function (index, word) {\r\n            if (textContent.toLowerCase().indexOf(word) >= 0) {\r\n                hit = word;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        // If no partial words were found, then check for total words.\r\n        if (hit == null) {\r\n            $.each(partialStopWords, function (index, word) {\r\n                if (\r\n                    textContent.length === word.length &&\r\n                    textContent.toLowerCase().indexOf(word) >= 0\r\n                ) {\r\n                    hit = word;\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return hit;\r\n    };\r\n\r\n    let errorCount = 0;\r\n\r\n    link.each((i, el) => {\r\n        let $el = $(el);\r\n        var linktext = $el.text();\r\n        var hasarialabelledby = $el.attr(\"aria-labelledby\");\r\n        var hasarialabel = $el.attr(\"aria-label\");\r\n        var hasariahidden = $el.attr(\"aria-hidden\");\r\n        var hastabindex = $el.attr(\"tabindex\");\r\n        var error = containsLinkTextStopWords($el.text().trim());\r\n        if (\r\n            $el.children().length == 0 &&\r\n            $el.attr(\"href\") !== undefined &&\r\n            $el.text().length == 0 &&\r\n            $el.is(\":visible\")\r\n        ) {\r\n            errorCount += 1;\r\n            let issueText = \"Found an empty hyperlink without any text!\";\r\n            $el.addClass(\"sa11y-error-text\");\r\n            $el.after((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText, true));\r\n        } else if (error != null) {\r\n            if (hasarialabelledby != null) {\r\n                // Link has aria labelled-by message\r\n                var acclinkname = document.getElementById(hasarialabelledby)\r\n                    .textContent;\r\n                var issueText = `The descriptive label for this link is: <span class='sa11y-bold'> ${linktext} ${acclinkname}</span>`;\r\n                $el.after((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.PASS, issueText, true));\r\n            } else if (hasarialabel != null) {\r\n                let issueText = `The descriptive label for this link is: <span class='sa11y-bold'>${hasarialabel} </span>`;\r\n                $el.after((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.PASS, issueText, true));\r\n            } else if (hasariahidden == \"true\" && hastabindex == \"-1\") {\r\n                //do nothing.\r\n            } else {\r\n                errorCount += 1;\r\n                $el.addClass(\"sa11y-error-text\");\r\n                let issueText = `Link text may not be descriptive enough, consider changing word: <span class='sa11y-red-text sa11y-bold'>${error}</span><hr aria-hidden='true' class='sa11y-hr'><span class='sa11y-bold'>Tip!</span> Link text should always be unique and meaningful so it could be understood out of context.`;\r\n                $el.after((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR, issueText, true));\r\n            }\r\n        }\r\n    });\r\n    return { error: errorCount };\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/rulesets/LinkText.js?");

/***/ }),

/***/ "./src/rulesets/QA.js":
/*!****************************!*\
  !*** ./src/rulesets/QA.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ checkQA)\n/* harmony export */ });\n/* harmony import */ var _components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/IssueGenerator */ \"./src/components/IssueGenerator.js\");\n/* harmony import */ var _components_ErrorBannerGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/ErrorBannerGenerator */ \"./src/components/ErrorBannerGenerator.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ \"./src/constants.js\");\n\r\n\r\n\r\n\r\nfunction checkQA(root, elemToIgnore) {\r\n    let errorCount = 0;\r\n    let warningCount = 0;\r\n\r\n    // ------------------------------------------------\r\n    // VIDEOS\r\n    // ------------------------------------------------\r\n    var $videos = root\r\n        .find(\r\n            \"video, iframe[src*='youtube.com'], iframe[src*='vimeo.com'], iframe[src*='yuja.com'], iframe[src*='panopto.com']\"\r\n        )\r\n        .not(elemToIgnore[\"container\"]);\r\n    $videos.each((i, el) => {\r\n        let $el = $(el);\r\n        warningCount++;\r\n        $el.addClass(\"sa11y-warning-border\");\r\n        let issueText =\r\n            \"Please ensure <span class='sa11y-bold'>all videos have closed captioning.</span> Providing captions for all audio and video content is a mandatory Level A requirement. Captions are meant to support people who are D/deaf or hard-of-hearing.\";\r\n        $videos.first().before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.WARNING, issueText));\r\n    });\r\n\r\n    // ------------------------------------------------\r\n    // AUDIO\r\n    // ------------------------------------------------\r\n    let $audio = root\r\n        .find(\r\n            \"audio, iframe[src*='soundcloud.com'], iframe[src*='simplecast.com'], iframe[src*='podbean.com'], iframe[src*='buzzsprout.com'], iframe[src*='blubrry.com'], iframe[src*='transistor.fm'], iframe[src*='fusebox.fm'], iframe[src*='libsyn.com']\"\r\n        )\r\n        .not(elemToIgnore[\"container\"]);\r\n    $audio.each((i, el) => {\r\n        let $el = $(el);\r\n        warningCount++;\r\n        $el.addClass(\"sa11y-warning-border\");\r\n        let issueText =\r\n            \"Please ensure to provide a <span class='sa11y-bold'>transcript for all podcasts.</span> Providing transcripts for audio content is a mandatory Level A requirement. Transcripts are meant to support people who are D/deaf or hard-of-hearing, but can benefit everyone. Consider placing the transcript below or within an accordion panel.\";\r\n        $el.first().before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.WARNING, issueText));\r\n    });\r\n\r\n    // ------------------------------------------------\r\n    // DataVizualization\r\n    // ------------------------------------------------\r\n    let $dataviz = root\r\n        .find(\"iframe[src*='datastudio.google.com'], iframe[src*='tableau']\")\r\n        .not(elemToIgnore[\"container\"]);\r\n    $dataviz.each((i, el) => {\r\n        let $el = $(el);\r\n        warningCount++;\r\n        $el.addClass(\"sa11y-warning-border\");\r\n        let issueText =\r\n            \"Data visualization widgets like this are often problematic for people who use a keyboard or screen reader to navigate, and can present significant difficulties for people with low vision or colorblindness. It's recommended to provide the same information in an alternative (text or table) format below the widget.\";\r\n        $el.first().before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.WARNING, issueText));\r\n    });\r\n\r\n    // ------------------------------------------------\r\n    // Twitter Warning\r\n    // ------------------------------------------------\r\n    let $twitterWarning = root\r\n        .find(\"[id^=twitter-widget]\")\r\n        .not(elemToIgnore[\"container\"]);\r\n    $twitterWarning.each((i, el) => {\r\n        let $el = $(el);\r\n        var numberofTweets = $el.contents().find(\".timeline-TweetList-tweet\")\r\n            .length;\r\n        if (numberofTweets > 3) {\r\n            warningCount++;\r\n            $el.addClass(\"sa11y-warning-text\");\r\n            let issueText =\r\n                \"The default Twitter timeline may cause accessibility issues for keyboard users. Secondly, the inline scrolling of the Twitter timeline may cause usability issues for mobile. It's recommended to add the following data attributes to the embed code. <hr aria-hidden='true' class='sa11y-hr'><span class='sa11y-bold'>It's recommended to:</span><ul><li>Add <span class='sa11y-kbd'>data-tweet-limit=&#34;2&#34;</span> to limit the amount of tweets.</li><li>Add <span class='sa11y-kbd'>data-chrome=&#34;nofooter noheader&#34;</span> to remove the widget's header and footer.</li></ul>\";\r\n            $el.before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.WARNING, issueText));\r\n        }\r\n    });\r\n\r\n    // ------------------------------------------------\r\n    // Warn users of TARGET BLANK within main content.\r\n    // ------------------------------------------------\r\n    let $linksTargetBlank = root\r\n        .find(\"a[target='_blank']\")\r\n        .not(elemToIgnore[\"link\"])\r\n        .not(\"a[href$='.pdf']\")\r\n        .not(\"a[href$='.docx']\")\r\n        .not(\"#sa11y-container a\")\r\n        .not(\".sa11y-exclude\");\r\n    $linksTargetBlank.each((i, el) => {\r\n        let $el = $(el);\r\n\r\n        var passWordsNewWindow = [\"new tab\", \"new window\"];\r\n        var containsPassWordsNewWindow = passWordsNewWindow.some(function (\r\n            pass\r\n        ) {\r\n            return $el.text().toLowerCase().indexOf(pass) >= 0;\r\n        });\r\n        if ($el && !containsPassWordsNewWindow) {\r\n            warningCount++;\r\n            $el.addClass(\"sa11y-warning-text\");\r\n            let issueText =\r\n                \"Please use <span class='sa11y-bold'>target=&ldquo;_blank&rdquo;</span> sparingly. Opening links in new tabs or windows can be very disorienting for people, especially for people who have difficulty perceiving visual content. Secondly, it's not always a good practice to control a user's experience or make decisions for them. Alert the user that the link opens in a new window within the link text.\";\r\n            $el.first().after((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.WARNING, issueText, true));\r\n        }\r\n    });\r\n    // ------------------------------------------------\r\n    //Error: Find all links pointing to development environment. Customize as needed.\r\n    // ------------------------------------------------\r\n    let $badDevLinks = root\r\n        .find(\"a[href^='https://www.dev.'], a[href*='wp-admin']\")\r\n        .not(elemToIgnore[\"link\"]);\r\n    $badDevLinks.each((i, el) => {\r\n        // BadLinkMessage\r\n        let $el = $(el);\r\n        errorCount++;\r\n        $el.addClass(\"sa11y-error-text\");\r\n        let issueText = `Bad link found. Link appears to point to a development environment. Make sure the link does not contain <em>dev</em> or <em>wp-admin</em> in the URL. <hr aria-hidden='true' class='sa11y-hr'>This link points to: <br><span class='sa11y-bold sa11y-red-text'>\r\n            ${el}</span>`;\r\n        $el.after((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.ERROR, issueText, true));\r\n    });\r\n\r\n    // ------------------------------------------------\r\n    // Warning: Find all PDFs. Although only append warning icon to first PDF on page.\r\n    // ------------------------------------------------\r\n    let checkPDF = root.find(\"a[href$='.pdf']\").not(elemToIgnore[\"container\"]);\r\n    let firstPDF = root\r\n        .find(\"a[href$='.pdf']:first\")\r\n        .not(elemToIgnore[\"container\"]);\r\n    if (checkPDF.length > 0) {\r\n        warningCount++;\r\n        checkPDF.addClass(\"sa11y-warning-text\");\r\n        checkPDF.has(\"img\").removeClass(\"sa11y-warning-text\");\r\n        let issueText =\r\n            \"PDFs are considered web content and must be made accessible as well. PDFs often contain issues for people who use screen readers (missing structural tags or missing form field labels) and people with low vision (text does not reflow when enlarged). If this PDF is a form, consider using an accessible HTML form as an alternative. If this PDF is a document, consider converting it into a web page. Otherwise, please <span class='sa11y-bold'>check PDF for accessibility in Acrobat DC.</span>\";\r\n        firstPDF.after((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.WARNING, issueText, true));\r\n    }\r\n\r\n    // ------------------------------------------------\r\n    // Block Quotes\r\n    // ------------------------------------------------\r\n    let $blockquotes = root.find(\"blockquote\").not(elemToIgnore[\"container\"]);\r\n    $blockquotes.each((i, el) => {\r\n        let $el = $(el);\r\n        if ($el.text().trim().length < 25) {\r\n            // BlockquoteMessage\r\n            errorCount++;\r\n            $el.addClass(\"sa11y-error-border\");\r\n            let issueText =\r\n                \"Blockquotes should be used for quotes only. They should never be used as headings. Please replace with a semantic heading (e.g. Heading 2 or Heading 3).\";\r\n            $el.before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.ERROR, issueText));\r\n        }\r\n    });\r\n\r\n    // ------------------------------------------------\r\n    // warning: detect uppercase\r\n    // ------------------------------------------------\r\n    let $queryUppercase = root\r\n        .find('h1, h2, h3, h4, h5, h6, p, li:not([class^=\"sa11y\"]), blockquote')\r\n        .not(elemToIgnore[\"container\"]);\r\n\r\n    $queryUppercase.each((i, el) => {\r\n        let $this = $(el);\r\n        let issueText =\r\n            \"All caps detected. Avoid typing sentences or phrases in uppercase. Some screen readers may interpret all capital text as an acronym and will read each letter individually. Additionally, all caps are more difficult to read and give the appearance of SHOUTING.\";\r\n        var uppercasePattern = /(?!<a[^>]*?>)(\\b[A-Z]['!:A-Z\\s]{15,}|\\b[A-Z]{15,}\\b)(?![^<]*?<\\/a>)/g;\r\n        var replaceUppercase =\r\n            '<span class=\"sa11y-warning-uppercase\">$1</span>' +\r\n            (0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.WARNING, issueText, true);\r\n        // $this.each( () {\r\n        //     $(this).html(\r\n        //         $(this).html().replace(uppercasePattern, replaceUppercase)\r\n        //     );\r\n        // });\r\n        $this.html($this.html().replace(uppercasePattern, replaceUppercase));\r\n    });\r\n    if ($(\".sa11y-warning-uppercase\").length > 0) {\r\n        warningCount++;\r\n    }\r\n\r\n    // ------------------------------------------------\r\n    // Tables\r\n    // ------------------------------------------------\r\n    let $table = root.find(\"table\").not(elemToIgnore[\"container\"]);\r\n    //Tables check.\r\n    $table.each((i, el) => {\r\n        let $el = $(el);\r\n        let findTHeaders = $el.find(\"th\");\r\n        let findHeadingTags = $el.find(\"h1, h2, h3, h4, h5, h6\");\r\n        if (findTHeaders.length == 0) {\r\n            // MissingHeadingsError\r\n            errorCount++;\r\n            $el.addClass(\"sa11y-error-border\");\r\n            let issueText =\r\n                \"Missing table headers! Accessible tables need HTML markup that indicates header cells and data cells which defines their relationship. This information provides context to people who use assistive technology. Tables should be used for tabular data only.\";\r\n            $el.before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.ERROR, issueText));\r\n        }\r\n        if (findHeadingTags.length > 0) {\r\n            // SemanticHeadingTableError\r\n            findHeadingTags.addClass(\"sa11y-error-heading\");\r\n            findHeadingTags.parent().addClass(\"sa11y-error-border\");\r\n            let issueText =\r\n                \"Semantic headings such as Heading 2 or Heading 3 should only be used for sections of content; <span class='sa11y-bold'>not</span> in HTML tables. Indicate table headings using the <span class='sa11y-bold'>th</span> element instead.\";\r\n            findHeadingTags.before((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.ERROR, issueText));\r\n        }\r\n        findTHeaders.each((_, th) => {\r\n            // EmptyTableHeaderError\r\n            let $th = $(th);\r\n            if ($th.text().trim().length < 1) {\r\n                errorCount++;\r\n                findTHeaders.addClass(\"sa11y-error-border\");\r\n                let issueText =\r\n                    \"Empty table header found! Table headers should <em>never</em> be empty. It is important to designate row and/or column headers to convey their relationship. This information provides context to people who use assistive technology. Please keep in mind that tables should be used for tabular data only.\";\r\n                findTHeaders.append((0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.ERROR, issueText));\r\n            }\r\n        });\r\n    });\r\n\r\n    // ------------------------------------------------\r\n    // Missing Language Tag\r\n    // ------------------------------------------------\r\n    //Error: Missing language tag. Lang should be at least 2 characters.\r\n    var lang = $(\"html\").attr(\"lang\");\r\n    if (lang == undefined || lang.length < 2) {\r\n        errorCount++;\r\n        let issueText =\r\n            \"Page language not declared! Please <a href='https://www.w3.org/International/questions/qa-html-language-declarations' target='_blank'>declare language on HTML tag.<span class='sa11y-visually-hidden'> (opens new tab)</span></a>\";\r\n        $(\"#sa11y-container\").after((0,_components_ErrorBannerGenerator__WEBPACK_IMPORTED_MODULE_1__.default)(issueText));\r\n    }\r\n\r\n    // ------------------------------------------------\r\n    // Announcement\r\n    // ------------------------------------------------\r\n    //Example ruleset. Be creative.\r\n    let $checkAnnouncement = root\r\n        .find(\".announcement-component\")\r\n        .not(elemToIgnore[\"container\"]).length;\r\n    if ($checkAnnouncement > 1) {\r\n        warningCount++;\r\n        let issueText =\r\n            \"More than one Announcement component found! The Announcement component should be used strategically and sparingly. It should be used to get attention or warn users about something important. Misuse of this component makes it less effective or impactful. Secondly, this component is semantically labeled as an Announcement for people who use screen readers.\";\r\n        $(\".announcement-component:gt(0)\").addClass(\"sa11y-warning-border\");\r\n        $(\".announcement-component:gt(0)\").before(\r\n            (0,_components_IssueGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(_constants__WEBPACK_IMPORTED_MODULE_2__.WARNING, issueText)\r\n        );\r\n    }\r\n    return { error: errorCount, warning: warningCount };\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/rulesets/QA.js?");

/***/ }),

/***/ "./src/rulesets/Readability.js":
/*!*************************************!*\
  !*** ./src/rulesets/Readability.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ checkReadability)\n/* harmony export */ });\n/* harmony import */ var _js_LoadGlobals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../js/LoadGlobals */ \"./src/js/LoadGlobals.js\");\n/* harmony import */ var _sa11y_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sa11y.config */ \"./src/sa11y.config.js\");\n\r\n\r\nfunction checkReadability(\r\n    root = $(_sa11y_config__WEBPACK_IMPORTED_MODULE_1__.default.root),\r\n    elemToIgnore = (0,_js_LoadGlobals__WEBPACK_IMPORTED_MODULE_0__.default)()\r\n) {\r\n    //Crude hack to add a period to the end of list items to make a complete sentence.\r\n    const $mainPandLi = root\r\n        .find(\"main p, main li, [role='main'] p, [role='main'] li\")\r\n        .not(elemToIgnore[\"container\"]);\r\n    $('main li, [role=\"main\"] li').each(function () {\r\n        var endOfList = $(this),\r\n            listText = endOfList.text();\r\n        if (listText.charAt(listText.length - 1) !== \".\") {\r\n            $('main li, [role=\"main\"] li').append(\r\n                '<span class=\"sa11y-readability-period sa11y-visually-hidden\">.</span>'\r\n            );\r\n        }\r\n    });\r\n\r\n    function number_of_syllables(wordCheck) {\r\n        wordCheck = wordCheck.toLowerCase().replace(\".\", \"\").replace(\"\\n\", \"\");\r\n        if (wordCheck.length <= 3) {\r\n            return 1;\r\n        }\r\n        wordCheck = wordCheck.replace(/(?:[^laeiouy]es|ed|[^laeiouy]e)$/, \"\");\r\n        wordCheck = wordCheck.replace(/^y/, \"\");\r\n        var syllable_string = wordCheck.match(/[aeiouy]{1,2}/g);\r\n\r\n        if (!!syllable_string) {\r\n            var syllables = syllable_string.length;\r\n        } else {\r\n            syllables = 0;\r\n        }\r\n        return syllables;\r\n    }\r\n\r\n    let paragraphtext = $mainPandLi.not(\"blockquote\").text();\r\n\r\n    var words_raw = paragraphtext.replace(/[.!?-]+/g, \" \").split(\" \");\r\n    var words = 0;\r\n    for (var i = 0; i < words_raw.length; i++) {\r\n        if (words_raw[i] != 0) {\r\n            words = words + 1;\r\n        }\r\n    }\r\n\r\n    var sentences_raw = paragraphtext.split(/[.!?]+/);\r\n    var sentences = 0;\r\n    for (var i = 0; i < sentences_raw.length; i++) {\r\n        if (sentences_raw[i] != \"\") {\r\n            sentences = sentences + 1;\r\n        }\r\n    }\r\n\r\n    var total_syllables = 0;\r\n    var syllables1 = 0;\r\n    var syllables2 = 0;\r\n    for (var i = 0; i < words_raw.length; i++) {\r\n        if (words_raw[i] != 0) {\r\n            var syllable_count = number_of_syllables(words_raw[i]);\r\n            if (syllable_count == 1) {\r\n                syllables1 = syllables1 + 1;\r\n            }\r\n            if (syllable_count == 2) {\r\n                syllables2 = syllables2 + 1;\r\n            }\r\n            total_syllables = total_syllables + syllable_count;\r\n        }\r\n    }\r\n\r\n    var characters = paragraphtext.replace(/[.!?|\\s]+/g, \"\").length;\r\n    var pollysyllables = words - (syllables1 + syllables2);\r\n    var flesch_reading_ease =\r\n        206.835 -\r\n        (1.015 * words) / sentences -\r\n        (84.6 * total_syllables) / words;\r\n\r\n    if (flesch_reading_ease > 100) {\r\n        flesch_reading_ease = 100;\r\n    } else if (flesch_reading_ease < 0) {\r\n        flesch_reading_ease = 0;\r\n    }\r\n\r\n    var flesch_kincaid_grade_level =\r\n        (0.39 * words) / sentences + (11.8 * total_syllables) / words - 15.9;\r\n    var gunning_fog_index =\r\n        (words / sentences + 100 * (pollysyllables / words)) * 0.4;\r\n    var automated_readability_index =\r\n        4.71 * (characters / words) + 0.5 * (words / sentences) - 21.43;\r\n    var smog = 1.043 * Math.sqrt((pollysyllables * 30) / sentences) + 3.1291;\r\n    var coleman_liau =\r\n        0.0588 * ((100 * characters) / words) -\r\n        0.296 * ((100 * sentences) / words) -\r\n        15.8;\r\n    var scoreMsg = `\r\n        [Detailed] Readability score of main content area. Please note text within a list is ignored.\r\n\r\n        Flesch Reading Ease: ${flesch_reading_ease.toFixed(1)}\r\n        WCAG 2.0 Level AAA requires 60 or greater.\r\n        \r\n        Grade Level Average: ${(\r\n            (flesch_kincaid_grade_level +\r\n                gunning_fog_index +\r\n                automated_readability_index +\r\n                coleman_liau +\r\n                (sentences >= 30 ? smog : 0)) /\r\n            (sentences >= 30 ? 5 : 4)\r\n        ).toFixed(1)}\r\n        \r\n        (Flesch-Kincaid): ${flesch_kincaid_grade_level.toFixed(1)}\r\n        (Gunning-Fog): ${gunning_fog_index.toFixed(1)}\r\n        (Automated Readability): ${automated_readability_index.toFixed(1)}\r\n        (Colemane-Liau):  : ${coleman_liau.toFixed(1)}${\r\n        sentences >= 30 ? \"(SMOG): \" + smog.toFixed(1) + \"\\n\\n\" : \"\"\r\n    }\r\n        WCAG 2.0 Level AAA requires grade 9 or lower.\r\n\r\n        Words: ${words}\r\n\r\n        Complex Words: ${Math.round(\r\n            100 * ((words - (syllables1 + syllables2)) / words)\r\n        )}%\r\n        \r\n        Sentences:${sentences}\r\n        Words Per Sentence: ${(words / sentences).toFixed(1)}\r\n\r\n        Syllables: ${total_syllables}\r\n        Characters: ${characters}\r\n    `;\r\n\r\n    console.log(scoreMsg);\r\n\r\n    let readingDifficulty = \"\";\r\n    let readabilityDetails = \"\";\r\n    let notEnoughContent = \"\";\r\n\r\n    if (words > 30) {\r\n        var fleschScore = flesch_reading_ease.toFixed(1);\r\n        var avgWordsPerSentence = (words / sentences).toFixed(1);\r\n\r\n        //WCAG AAA pass if greater than 60\r\n        if (fleschScore >= 0 && fleschScore < 30) {\r\n            readingDifficulty =\r\n                '<span class=\"sa11y-readability-score\">Very difficult</span>';\r\n        } else if (fleschScore > 31 && fleschScore < 49) {\r\n            readingDifficulty =\r\n                '<span class=\"sa11y-readability-score\">Difficult</span>';\r\n        } else if (fleschScore > 50 && fleschScore < 60) {\r\n            readingDifficulty =\r\n                '<span class=\"sa11y-readability-score\">Fairly difficult</span>';\r\n        } else {\r\n            readingDifficulty =\r\n                '<span class=\"sa11y-readability-score\">Good</span>';\r\n        }\r\n\r\n        readabilityDetails = `\r\n            <ul id=\"sa11y-readability-details\">\r\n                <li>\r\n                <span class='sa11y-bold'>Average words per sentence:</span> ${avgWordsPerSentence} \r\n                </li>\r\n                <li>\r\n                    <span class='sa11y-bold'>Complex words:</span> ${Math.round(\r\n                        100 * ((words - (syllables1 + syllables2)) / words)\r\n                    )} %\r\n                </li>\r\n                <li>\r\n                    <span class='sa11y-bold'>Words:</span> ${words}\r\n                </li>\r\n            </ul>`;\r\n    } else if ($mainPandLi.length === 0) {\r\n        fleschScore = \"\";\r\n        readingDifficulty = \"\";\r\n        readabilityDetails = \"\";\r\n        notEnoughContent =\r\n            'Please identify the <a href=\"https://www.w3.org/WAI/tutorials/page-structure/regions/#main-content\" target=\"_blank\">main content region to calculate readability. <span class=\"sa11y-visually-hidden\">(opens new tab)</span></a>';\r\n    } else {\r\n        fleschScore = \"\";\r\n        readingDifficulty = \"\";\r\n        readabilityDetails = \"\";\r\n        notEnoughContent = \"Not enough content to calculate readability score.\";\r\n    }\r\n\r\n    let sa11yReadabilityPanel = document.createElement(\"div\");\r\n    sa11yReadabilityPanel.setAttribute(\"id\", \"sa11y-readability-content\");\r\n    sa11yReadabilityPanel.innerHTML = `\r\n            <span class=\"sa11y-header-text\">Readability</span>\r\n            <div class=\"sa11y-readability-level\">${fleschScore} ${readingDifficulty}</div> ${readabilityDetails} ${notEnoughContent}\r\n            `;\r\n    $(\"#sa11y-readability-panel\").prepend(sa11yReadabilityPanel);\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/rulesets/Readability.js?");

/***/ }),

/***/ "./src/sa11y.config.js":
/*!*****************************!*\
  !*** ./src/sa11y.config.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    //Use \"main\" for main content.\r\n    root: \"body\",\r\n    //Language of Sa11y. Some global variables to help translate.\r\n    lang: {\r\n        //Language code, e.g. \"fr\"\r\n        code: \"en\",\r\n        text: {\r\n            main: \"Toggle Accessibility Checker\",\r\n            container: \"Accessibility Checker\",\r\n            [_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR]: \"Error\", //Erreur\r\n            [_constants__WEBPACK_IMPORTED_MODULE_0__.WARNING]: \"Warning\", //Attention\r\n            [_constants__WEBPACK_IMPORTED_MODULE_0__.PASS]: \"Good\", //Bon\r\n        },\r\n    },\r\n    //Inclusions and exclusions\r\n    // TODO: make these ignores consistent.\r\n    ignore: {\r\n        container: \".sa11y-ignore, #sa11y-container\", //Ignore specific regions.\r\n        outline: \"\", //Exclude headings from outline panel.\r\n        header: \"\", //Ignore specific headings. E.g. \"h1.jumbotron-heading\"\r\n        image: \"\", //Ignore specific images.\r\n        link: \"\", //Ignore specific links.\r\n    },\r\n    icon: _constants__WEBPACK_IMPORTED_MODULE_0__.TOOLICON,\r\n});\r\n\n\n//# sourceURL=webpack://sa11y/./src/sa11y.config.js?");

/***/ }),

/***/ "./src/setup/contrastSetup.js":
/*!************************************!*\
  !*** ./src/setup/contrastSetup.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ contrastSetup)\n/* harmony export */ });\nfunction contrastSetup() {\r\n    // ----------------------------------------------------------------------\r\n    // Toggle Contrast Check\r\n    // ----------------------------------------------------------------------\r\n    let $sa11yContrastCheck = $(\"#sa11y-contrastCheck-toggle\");\r\n    $sa11yContrastCheck.click(() => {\r\n        if (localStorage.getItem(\"sa11y-contrastCheck\") === \"On\") {\r\n            localStorage.setItem(\"sa11y-contrastCheck\", \"off\");\r\n            $sa11yContrastCheck.text(\"Off\");\r\n            $sa11yContrastCheck.attr(\"aria-pressed\", \"false\");\r\n        } else {\r\n            localStorage.setItem(\"sa11y-contrastCheck\", \"On\");\r\n            $sa11yContrastCheck.text(\"On\");\r\n            $sa11yContrastCheck.attr(\"aria-pressed\", \"true\");\r\n        }\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/setup/contrastSetup.js?");

/***/ }),

/***/ "./src/setup/darkModeSetup.js":
/*!************************************!*\
  !*** ./src/setup/darkModeSetup.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ darkmodeSetup)\n/* harmony export */ });\nfunction prefersColorTest(systemInitiatedDark) {\r\n    if (systemInitiatedDark.matches) {\r\n        $(\"html\").attr(\"data-sa11y-theme\", \"dark\");\r\n        $sa11yTheme.text(\"On\");\r\n        $sa11yTheme.attr(\"aria-pressed\", \"true\");\r\n        sessionStorage.setItem(\"sa11y-theme\", \"\");\r\n    } else {\r\n        $(\"html\").attr(\"data-sa11y-theme\", \"light\");\r\n        $sa11yTheme.text(\"Off\");\r\n        $sa11yTheme.attr(\"aria-pressed\", \"false\");\r\n        sessionStorage.setItem(\"sa11y-theme\", \"\");\r\n    }\r\n}\r\n\r\nfunction darkmodeSetup() {\r\n    // ----------------------------------------------------------------------\r\n    // Dark Mode. Credits: https://derekkedziora.com/blog/dark-mode-revisited\r\n    // ----------------------------------------------------------------------\r\n    let systemInitiatedDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n    let $sa11yTheme = $(\"#sa11y-theme-toggle\");\r\n    let theme = sessionStorage.getItem(\"sa11y-theme\");\r\n    if (systemInitiatedDark.matches) {\r\n        $sa11yTheme.text(\"On\");\r\n        $sa11yTheme.attr(\"aria-pressed\", \"true\");\r\n    } else {\r\n        $sa11yTheme.text(\"Off\");\r\n        $sa11yTheme.attr(\"aria-pressed\", \"false\");\r\n    }\r\n\r\n    systemInitiatedDark.addListener(prefersColorTest);\r\n    $sa11yTheme.click(function () {\r\n        let theme = sessionStorage.getItem(\"sa11y-theme\");\r\n        if (theme === \"dark\") {\r\n            $(\"html\").attr(\"data-sa11y-theme\", \"light\");\r\n            sessionStorage.setItem(\"sa11y-theme\", \"light\");\r\n            $sa11yTheme.text(\"Off\");\r\n            $sa11yTheme.attr(\"aria-pressed\", \"false\");\r\n        } else if (theme === \"light\") {\r\n            $(\"html\").attr(\"data-sa11y-theme\", \"dark\");\r\n            sessionStorage.setItem(\"sa11y-theme\", \"dark\");\r\n            $sa11yTheme.text(\"On\");\r\n            $sa11yTheme.attr(\"aria-pressed\", \"true\");\r\n        } else if (systemInitiatedDark.matches) {\r\n            $(\"html\").attr(\"data-sa11y-theme\", \"light\");\r\n            sessionStorage.setItem(\"sa11y-theme\", \"light\");\r\n            $sa11yTheme.text(\"Off\");\r\n            $sa11yTheme.attr(\"aria-pressed\", \"false\");\r\n        } else {\r\n            $(\"html\").attr(\"data-sa11y-theme\", \"dark\");\r\n            sessionStorage.setItem(\"sa11y-theme\", \"dark\");\r\n            $sa11yTheme.text(\"On\");\r\n            $sa11yTheme.attr(\"aria-pressed\", \"true\");\r\n        }\r\n    });\r\n    if (theme === \"dark\") {\r\n        $(\"html\").attr(\"data-sa11y-theme\", \"dark\");\r\n        sessionStorage.setItem(\"sa11y-theme\", \"dark\");\r\n        $sa11yTheme.text(\"On\");\r\n        $sa11yTheme.attr(\"aria-pressed\", \"true\");\r\n    } else if (theme === \"light\") {\r\n        $(\"html\").attr(\"data-sa11y-theme\", \"light\");\r\n        sessionStorage.setItem(\"sa11y-theme\", \"light\");\r\n        $sa11yTheme.text(\"Off\");\r\n        $sa11yTheme.attr(\"aria-pressed\", \"false\");\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/setup/darkModeSetup.js?");

/***/ }),

/***/ "./src/setup/generalSetup.js":
/*!***********************************!*\
  !*** ./src/setup/generalSetup.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ generalSetup)\n/* harmony export */ });\n/* harmony import */ var _js_LoadGlobals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../js/LoadGlobals */ \"./src/js/LoadGlobals.js\");\n/* harmony import */ var _js_Reset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../js/Reset */ \"./src/js/Reset.js\");\n/* harmony import */ var _js_ScanPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../js/ScanPage */ \"./src/js/ScanPage.js\");\n\r\n\r\n\r\n\r\nfunction generalSetup() {\r\n    const elemtoIgnore = (0,_js_LoadGlobals__WEBPACK_IMPORTED_MODULE_0__.default)();\r\n    var sa11yToggle = $(\"#sa11y-toggle\");\r\n    sa11yToggle.click(() => {\r\n        if (localStorage.getItem(\"sa11y-panel\") === \"opened\") {\r\n            localStorage.setItem(\"sa11y-panel\", \"closed\");\r\n            sa11yToggle.removeClass(\"sa11y-on\").attr(\"aria-expanded\", \"false\");\r\n            (0,_js_Reset__WEBPACK_IMPORTED_MODULE_1__.default)();\r\n        } else {\r\n            localStorage.setItem(\"sa11y-panel\", \"opened\");\r\n            sa11yToggle.addClass(\"sa11y-on\").attr(\"aria-expanded\", \"true\");\r\n            (0,_js_ScanPage__WEBPACK_IMPORTED_MODULE_2__.default)(elemtoIgnore);\r\n        }\r\n    });\r\n    //Remember to leave it open\r\n    if (localStorage.getItem(\"sa11y-panel\") === \"opened\") {\r\n        sa11yToggle.addClass(\"sa11y-on\").attr(\"aria-expanded\", \"true\");\r\n    }\r\n\r\n    //Crudely give a little time to load any other content or slow post-rendered JS, iFrames, etc.\r\n    if (sa11yToggle.hasClass(\"sa11y-on\")) {\r\n        sa11yToggle.toggleClass(\"loading-sa11y\");\r\n        sa11yToggle.attr(\"aria-expanded\", \"true\");\r\n        setTimeout(() => {\r\n            (0,_js_ScanPage__WEBPACK_IMPORTED_MODULE_2__.default)(elemtoIgnore);\r\n        }, 500);\r\n    }\r\n\r\n    $(document).ready(() => {\r\n        // Updates badge counter\r\n        (0,_js_ScanPage__WEBPACK_IMPORTED_MODULE_2__.default)(elemtoIgnore);\r\n        (0,_js_Reset__WEBPACK_IMPORTED_MODULE_1__.default)();\r\n    });\r\n\r\n    //Escape key to shutdown.\r\n    // Check if working:\r\n    $(document).keyup((e) => {\r\n        if (e.keyCode == 27 && $(\"#sa11y-panel\").hasClass(\"sa11y-active\")) {\r\n            tippy.hideAll();\r\n            sessionStorage.enableSa11y = \"\";\r\n            localStorage.setItem(\"sa11y-panel\", \"closed\");\r\n            sa11yToggle.removeClass(\"sa11y-on\").attr(\"aria-expanded\", \"false\");\r\n            (0,_js_Reset__WEBPACK_IMPORTED_MODULE_1__.default)();\r\n        } else {\r\n            this.onkeyup = null;\r\n        }\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/setup/generalSetup.js?");

/***/ }),

/***/ "./src/setup/index.js":
/*!****************************!*\
  !*** ./src/setup/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Sa11y)\n/* harmony export */ });\n/* harmony import */ var _panelSetup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./panelSetup */ \"./src/setup/panelSetup.js\");\n/* harmony import */ var _generalSetup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generalSetup */ \"./src/setup/generalSetup.js\");\n/* harmony import */ var _contrastSetup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contrastSetup */ \"./src/setup/contrastSetup.js\");\n/* harmony import */ var _darkModeSetup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./darkModeSetup */ \"./src/setup/darkModeSetup.js\");\n/* harmony import */ var _readabilitySetup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./readabilitySetup */ \"./src/setup/readabilitySetup.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Sa11y() {\r\n    $(() => {\r\n        $(\"body\").prepend(_panelSetup__WEBPACK_IMPORTED_MODULE_0__.default);\r\n        (0,_generalSetup__WEBPACK_IMPORTED_MODULE_1__.default)();\r\n        // contrastSetup();\r\n        (0,_contrastSetup__WEBPACK_IMPORTED_MODULE_2__.default)();\r\n        (0,_darkModeSetup__WEBPACK_IMPORTED_MODULE_3__.default)();\r\n        (0,_readabilitySetup__WEBPACK_IMPORTED_MODULE_4__.default)();\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/setup/index.js?");

/***/ }),

/***/ "./src/setup/panelSetup.js":
/*!*********************************!*\
  !*** ./src/setup/panelSetup.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _sa11y_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sa11y.config */ \"./src/sa11y.config.js\");\n\r\nlet loadContrastPreference =\r\n    localStorage.getItem(\"sa11y-contrastCheck\") === \"On\";\r\nlet loadReadabilityPreference =\r\n    localStorage.getItem(\"sa11y-readabilityCheck\") === \"On\";\r\nconst panel = `\r\n<div\r\n    id='sa11y-container'\r\n    role='region'\r\n    lang=\"${_sa11y_config__WEBPACK_IMPORTED_MODULE_0__.default.lang.code}\"\r\n    aria-label=\"${_sa11y_config__WEBPACK_IMPORTED_MODULE_0__.default.lang.container}\"\r\n>\r\n    <button type=\"button\" aria-expanded=\"false\" id=\"sa11y-toggle\" aria-describedby=\"sa11y-notification-badge\">\r\n        ${_sa11y_config__WEBPACK_IMPORTED_MODULE_0__.default.icon}\r\n        <span class=\"sa11y-visually-hidden\">\r\n            ${_sa11y_config__WEBPACK_IMPORTED_MODULE_0__.default.lang.text.main} \r\n        </span>\r\n        <div id=\"sa11y-notification-badge\" style=\"display: none;\">\r\n            <span id=\"sa11y-notification-count\"></span>\r\n            <span class=\"sa11y-visually-hidden\">errors detected.</span>\r\n        </div>\r\n    </button>\r\n    <div id=\"sa11y-panel\">\r\n        <div id=\"sa11y-outline-panel\">\r\n        <div id=\"sa11y-outline-header\" class=\"sa11y-header-text\">\r\n            <span tabindex=\"-1\">Page outline</span>\r\n        </div>  \r\n        <div id=\"sa11y-outline-content\">\r\n            <ul id=\"sa11y-outline-list\"></ul>\r\n        </div>\r\n        <div id=\"sa11y-readability-panel\"></div>\r\n    </div>\r\n    <div id=\"sa11y-settings-panel\">\r\n        <div id=\"sa11y-settings-header\" class=\"sa11y-header-text\">\r\n            <span tabindex=\"-1\">Settings</span>\r\n        </div>\r\n        <div id=\"sa11y-settings-content\">\r\n            <ul id=\"sa11y-settings-options\">  \r\n                <li>\r\n                    <label id=\"check-contrast\" for=\"sa11y-contrastCheck-toggle\">Check contrast</label>\r\n                    <button id=\"sa11y-contrastCheck-toggle\" \r\n                    aria-labelledby=\"check-contrast\" \r\n                    class=\"sa11y-settings-switch\" \r\n                    aria-pressed=\"${loadContrastPreference ? \"true\" : \"false\"}\">\r\n                        ${loadContrastPreference ? \"On\" : \"Off\"}\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <label id=\"dark-mode\" for=\"sa11y-theme-toggle\">Dark mode</label>\r\n                    <button id=\"sa11y-theme-toggle\" aria-labelledby=\"dark-mode\" class=\"sa11y-settings-switch\"></button>\r\n                </li>\r\n                <li>\r\n                    <label id=\"check-readability\" for=\"sa11y-readabilityCheck-toggle\">Readability <span class=\"sa11y-badge\">AAA</span></label>\r\n                    <button id=\"sa11y-readabilityCheck-toggle\" aria-labelledby=\"check-readability\" class=\"sa11y-settings-switch\" \r\n                    aria-pressed=\"${\r\n                        loadReadabilityPreference ? \"true\" : \"false\"\r\n                    }\">\r\n                        ${loadReadabilityPreference ? \"On\" : \"Off\"}\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n        <div id=\"sa11y-panel-content\"><div class=\"sa11y-panel-icon\"></div>\r\n            <div id=\"sa11y-panel-text\">\r\n                <span id=\"sa11y-status\"></span>\r\n            </div>\r\n        </div>\r\n        <div id=\"sa11y-panel-controls\">\r\n            <button type=\"button\" aria-expanded=\"false\" id=\"sa11y-outline-toggle\">Show Outline</button>\r\n            <button type=\"button\" aria-expanded=\"false\" id=\"sa11y-settings-toggle\">Show Settings</button>\r\n            <div aria-hidden=\"true\">&nbsp;&nbsp;</div>\r\n        </div>\r\n    </div>\r\n</div>`;\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (panel);\r\n\n\n//# sourceURL=webpack://sa11y/./src/setup/panelSetup.js?");

/***/ }),

/***/ "./src/setup/readabilitySetup.js":
/*!***************************************!*\
  !*** ./src/setup/readabilitySetup.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ readabilitySetup)\n/* harmony export */ });\n/* harmony import */ var _rulesets_Readability__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../rulesets/Readability */ \"./src/rulesets/Readability.js\");\n\r\n\r\nfunction readabilitySetup() {\r\n    // ----------------------------------------------------------------------\r\n    // Toggle Readability\r\n    // ----------------------------------------------------------------------\r\n    let $sa11yReadabilityCheck = $(\"#sa11y-readabilityCheck-toggle\");\r\n    $sa11yReadabilityCheck.click(() => {\r\n        if (localStorage.getItem(\"sa11y-readabilityCheck\") === \"On\") {\r\n            localStorage.setItem(\"sa11y-readabilityCheck\", \"off\");\r\n            $sa11yReadabilityCheck.text(\"Off\");\r\n            $sa11yReadabilityCheck.attr(\"aria-pressed\", \"false\");\r\n            $(\"#sa11y-readability-content\").remove();\r\n        } else {\r\n            localStorage.setItem(\"sa11y-readabilityCheck\", \"On\");\r\n            $sa11yReadabilityCheck.text(\"On\");\r\n            $sa11yReadabilityCheck.attr(\"aria-pressed\", \"true\");\r\n            (0,_rulesets_Readability__WEBPACK_IMPORTED_MODULE_0__.default)();\r\n        }\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://sa11y/./src/setup/readabilitySetup.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;